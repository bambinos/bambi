# ------------------------------------------------------------------------------------------------ #
#                                            Packaging                                             #
# ------------------------------------------------------------------------------------------------ #
[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0", "setuptools_scm>=8"]

[tool.setuptools_scm]

[project]
name = "bambi"
description = "BAyesian Model Building Interface in Python"
requires-python = ">=3.11"
readme = "README.md"
license = { file = "LICENSE" }
dynamic = ["version"]
maintainers = [
    { name = "TomÃ¡s Capretto", email = "tomicapretto@gmail.com" },
    { name = "Osvaldo Martin", email = "aloctavodia@gmail.com" },
    { name = "Gabriel Stechschulte", email = "stechschulteg@gmail.com" },
    { name = "Ravin Kumar", email = "ravinsdrive@gmail.com" },
]

dependencies = [
    "arviz>=0.20.0",
    "formulae>=0.5.3",
    "graphviz",
    "pandas>=1.0.0",
    "pymc>=5.26.1",
]

[project.optional-dependencies]
jax = [
    "blackjax>=1.2,<1.3",
    "jax>=0.7,<0.8",
    "numpyro>=0.19,<0.20",
]
nutpie = [
    "numba>=0.61.2",
    "nutpie>=0.15,<0.16",
]

[project.urls]
homepage = "https://bambinos.github.io/bambi"
documentation = "https://bambinos.github.io/bambi"
repository = "https://github.com/bambinos/bambi"
changelog = "https://github.com/bambinos/bambi/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = [
    "bambi",
    "bambi.backend",
    "bambi.data",
    "bambi.defaults",
    "bambi.families",
    "bambi.interpret",
    "bambi.priors",
    "bambi.terms",
]


# ------------------------------------------------------------------------------------------------ #
#                                               Pixi                                               #
# ------------------------------------------------------------------------------------------------ #
[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]
preview = ["pixi-build"]

# NOTE: Installs Bambi in editable mode
[tool.pixi.pypi-dependencies]
bambi = { path = ".", editable = true }

[tool.pixi.dependencies]
# NOTE: We get all dependencies we need through installation of Bambi itself

## Dependencies from conda channels
[tool.pixi.feature.dev.dependencies]
black = "25.*"
pre-commit = "4.*"
pylint = "3.3.*"

[tool.pixi.feature.test.dependencies]
pytest = ">=8,<9"
pytest-cov = ">=7,<8"

[tool.pixi.feature.docs.dependencies]
ipykernel = ">=6.30,<7"
notebook = ">=7,<9"
quartodoc = ">=0.11,<0.12"
ipywidgets = ">=8.1.7,<9"
watermark = ">=2.5.0,<3"
statsmodels = ">=0.14.5,<0.15"
seaborn = ">=0.13.2,<0.14"
lifelines = ">=0.30.0,<0.31"

[tool.pixi.feature.jax.dependencies]
blackjax = ">=1.2,<1.3"
jax = ">=0.7,<0.8"
numpyro = ">=0.19,<0.20"

[tool.pixi.feature.nutpie.dependencies]
numba = ">=0.61.2"
nutpie = ">=0.15,<0.16"

[tool.pixi.feature.py311.dependencies]
python = "~=3.11.0"

[tool.pixi.feature.py312.dependencies]
python = "~=3.12.0"

[tool.pixi.feature.py313.dependencies]
python = "~=3.13.0"


[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev", "test", "docs", "jax", "nutpie"], solve-group = "default" }
# Only used for testing purposes
py311 = {features = ["dev", "test", "docs", "jax", "nutpie", "py311"]}
py312 = {features = ["dev", "test", "docs", "jax", "nutpie", "py312"]}
py313 = {features = ["dev", "test", "docs", "jax", "nutpie", "py313"]}

[tool.pixi.feature.dev.tasks]
pre-commit-setup = "pre-commit install"

# ------------------------------------------------------------------------------------------------ #
#                                          Other tooling                                           #
# ------------------------------------------------------------------------------------------------ #
[tool.black]
line-length = 100
target-version = ["py312"]

[tool.pytest.ini_options]
addopts = "-p no:warnings"


[tool.pylint.main]
jobs = 0
ignore = ["tests"]
unsafe-load-any-extension = false


[tool.pylint.messages_control]
disable = [
  "cyclic-import",
  "missing-docstring",
  "no-else-return",
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-branches",
  "too-many-locals",
  "too-many-statements",
  "use-implicit-booleaness-not-len",
]

[tool.pylint.format]
max-line-length = 100


[tool.pylint.variables]
dummy-variables-rgx = "_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_"
ignored-argument-names = "_.*|^ignored_|^unused_"

# [tool.pylint.basic]
good-names = [
    "_",
    "_log",
    "b",
    "i",
    "j",
    "k",
    "m",
    "n",
    "p",
    "q",
    "t",
    "u",
    "x",
    "X",
    "X",
    "y",
    "z",
    "ax",
    "df",
    "dm",
    "lb",
    "mu",
    "nu",
    "ub",
    "eta",
    "Z",
    "X_terms",
    "Z_terms",
]

bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata"]


[tool.pylint.similarities]
min-similarity-lines = 50

[tool.pylint.miscellaneous]
notes = ["FIXME", "XXX"]

[tool.pylint.exceptions]
overgeneral-exceptions = ["builtins.Exception"]

[tool.pylint.design]
max-args = 10
max-positional-arguments = 20
max-attributes = 10
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
